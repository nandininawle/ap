#include<lpc214x.h> 
#include "UART.c " 
 
unsigned char message_1[]="GPS program started uart initialised"; unsigned char message_2[]="\n invalid GPS string"; unsigned char Lat_string[]="\n Latitude="; 
unsigned char Long_string[]="\n Longitude="; 
unsigned char rcv_byte; 
unsigned char rcv_array[20]; 
int main() 
{ 
unsigned char count=0; 
UART0Init(); //USER INTERFACE 
UART1Init(); //GPS 
//transmit string on uart0 saying" GPS program started UART0_Puts(message_1); 
while (1) 
{ 
// Wait for '$' character to indicate the start of a GPS string while (rcv_byte != '$') 
{ 
rcv_byte = UART1_GetChar(); // Read a character from UART1 } 
UART1_PutChar(rcv_byte); 
rcv_byte =UART1_GetChar();// it will be ‘G’ 
UART1_PutChar(rcv_byte); 
rcv_byte = UART1_GetChar();// it will be ‘P’ 
UART1_PutChar(rcv_byte); 
rcv_byte = UART1_GetChar(); 
UART1_PutChar(rcv_byte);
if (rcv_byte == 'R')// If the character is 'R' 
{ 
for (count = 0; count < 14; count++) 
{ 
rcv_byte = UART1_GetChar(); 
UART1_PutChar(rcv_byte); 
} 
rcv_byte = UART1_GetChar(); 
UART1_PutChar(rcv_byte); 
if(rcv_byte == 'V')//Invalid message 
{ 
UART0_Puts(message_2); 
} 
else//valid if 'A' 
{ 
rcv_byte = UART1_GetChar();//for comma discarding UART1_PutChar(rcv_byte); 
for (count =0; count < 24; count++)//characters stored in array { 
rcv_byte = UART1_GetChar(); 
rcv_array[count]=rcv_byte; 
UART1_PutChar(rcv_byte); 
} 
UART0_Puts(Lat_string); 
// Print the first 11 characters of rcv_array through UART0 for (count = 0; count < 11; count++) 
{ 
UART0_PutChar(rcv_array[count]); 
} 
UART0_Puts(Long_string); 
// Print the first 11 characters of rcv_array through UART0 for (count = 12; count < 24; count++) 
{ 
UART0_PutChar(rcv_array[count]); 
} 
} 
} 
}
}

\\\\uart

void UART0Init() 
{
    PINSEL0 |= 0x00000005;
    U0FCR = 0x07;
    U0LCR = 0x83;
    U0DLM = 0x00;
    U0DLL = 0x62;
    U0LCR = 0x03;
}

unsigned char UART0_PutChar(unsigned char ch) 
{
    if (ch == '\n') 
    {
        while (!(U0LSR & 0x20));
        U0THR = 0x0D;
    }
    while (!(U0LSR & 0x20));
    return (U0THR = ch);
}

unsigned char UART0_GetChar(void) 
{
    while (!(U0LSR & 0x01));
    return (U0RBR);
}

void UART0_Puts(unsigned char *str) 
{
    while (1) 
    {
        if (*str == '\0')
            break;
        UART0_PutChar(*str++);
    }
}

void UART1Init() 
{
    PINSEL0 |= 0x00050000;
    U1FCR = 0x07;
    U1LCR = 0x83;
    U1DLM = 0x00;
    U1DLL = 0x62;
    U1LCR = 0x03;
}

unsigned char UART1_PutChar(unsigned char ch) 
{
    if (ch == '\n') 
    {
        while (!(U1LSR & 0x20));
        U1THR = 0x0D;
    }
    while (!(U1LSR & 0x20));
    return (U1THR = ch);
}

unsigned char UART1_GetChar(void) 
{
    while (!(U1LSR & 0x01));
    return (U1RBR);
}

void UART1_Puts(unsigned char *str) 
{
    while (1) 
    {
        if (*str == '\0')
            break;
        UART1_PutChar(*str++);
    }
}

